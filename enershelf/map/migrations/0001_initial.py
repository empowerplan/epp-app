# Generated by Django 3.2.3 on 2021-08-09 10:23

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('area', models.FloatField()),
                ('population', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Nightlight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('distance', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalsSimulated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('name', models.CharField(max_length=254)),
                ('type', models.CharField(max_length=254)),
                ('town', models.CharField(max_length=254, null=True)),
                ('ownership', models.CharField(max_length=254)),
                ('population_per_hospital', models.FloatField()),
                ('catchment_area_hospital', models.FloatField()),
                ('nightlight', models.IntegerField(null=True)),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='simulated_hospitals', to='map.district')),
            ],
        ),
        migrations.CreateModel(
            name='Hospitals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('name', models.CharField(max_length=254)),
                ('type', models.CharField(max_length=254)),
                ('town', models.CharField(max_length=254, null=True)),
                ('ownership', models.CharField(max_length=254)),
                ('population_per_hospital', models.FloatField()),
                ('catchment_area_hospital', models.FloatField()),
                ('nightlight', models.IntegerField(null=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hospitals', to='map.district')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='map.region'),
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
                ('area', models.FloatField()),
                ('population_density', models.FloatField()),
                ('closest_hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cluster', to='map.hospitals')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cluster', to='map.district')),
            ],
        ),
    ]
