version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: digiplan_production_django
    restart: unless-stopped
    networks:
      - digiplan_network
      - caddy_network
    volumes:
      - ./digiplan/data:/app/digiplan/data
      - ./digiplan/static/mvts:/app/staticfiles/mvts
    expose:
      - "5000"
    depends_on:
      - postgres
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: digiplan_production_postgres
    command: postgres -N 500
    restart: always
    networks:
      - digiplan_network
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

networks:
  digiplan_network:
  caddy_network:
    external:
      name: docker_caddy_network


